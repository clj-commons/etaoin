{:paths ["src" "resources"]
 :deps {org.clojure/clojure {:mvn/version "1.9.0"} ;; min clojure version
        babashka/fs {:mvn/version "0.5.21"}
        babashka/process {:mvn/version "0.5.22"}
        clj-http/clj-http {:mvn/version "3.13.0"} ;; for jvm use
        org.clj-commons/clj-http-lite {:mvn/version "1.0.13"} ;; for babashka use
        slingshot/slingshot {:mvn/version "0.12.2"}
        cheshire/cheshire {:mvn/version "5.13.0"}
        org.clojure/tools.cli {:mvn/version "1.1.230"}
        org.clojure/tools.logging {:mvn/version "1.3.0"}
        lambdaisland/uri {:mvn/version "1.19.155"}}
 :aliases
 {;; we use babashka/neil for project attributes
  ;; publish workflow references these values (and automatically bumps patch component of version)
  :neil {:project {:version "1.1.40" ;; describes last release and is template for next release
                   :name  etaoin/etaoin
                   ;; not neilisms - could potentially conflict with new neilisms
                   :github-coords clj-commons/etaoin}}

  :1.11 {:replace-deps {org.clojure/clojure {:mvn/version "1.11.3"}}}
  :1.12 {:replace-deps {org.clojure/clojure {:mvn/version "1.12.0-beta1"}}}
  :debug {:extra-paths ["env/dev/resources"]}
  :test {:extra-paths ["test" "env/test/resources" "build"]
         :extra-deps {io.github.cognitect-labs/test-runner {:git/tag "v0.5.1" :git/sha "dfb30dd"}
                      org.babashka/cli {:mvn/version "0.8.59"}
                      ch.qos.logback/logback-classic {:mvn/version "1.3.14"}
                      ;; for http-client which uses apache http client 4.x which uses commons logging
                      org.slf4j/jcl-over-slf4j {:mvn/version "2.0.13"}}
         :exec-fn test-shared/test
         :org.babashka/cli {:coerce {:nses [:symbol]
                                     :patterns [:string]
                                     :vars [:symbol]}}
         :main-opts ["-m" "babashka.cli.exec"]}
  :script {:extra-paths ["script"]}

  ;; test-doc-blocks - gen tests
  :test-doc-blocks {:replace-deps {org.clojure/clojure {:mvn/version "1.11.3"}
                                   com.github.lread/test-doc-blocks  {:mvn/version "1.1.20"}}
                    :replace-paths []
                    :ns-default lread.test-doc-blocks
                    :exec-args {:docs ["doc/01-user-guide.adoc"]}}

  ;; test-doc-blocks - run tests
  ;; usage: test:test-docs
  :test-docs {:override-deps {org.clojure/clojure {:mvn/version "1.11.3"}}
              :extra-paths ["target/test-doc-blocks/test"]
              :exec-fn cognitect.test-runner.api/test
              :exec-args {:dirs ["target/test-doc-blocks/test"]}
              :org.babashka/cli {:coerce {:nses [:symbol]
                                          :patterns [:string]
                                          :vars [:symbol]}}
              :main-opts ["-m" "babashka.cli.exec"]}

  :clofidence {:classpath-overrides {org.clojure/clojure nil}
               :extra-deps {com.github.flow-storm/clojure {:mvn/version "LATEST"} ; >= 1.11.1-15
                            com.github.flow-storm/clofidence {:mvn/version "LATEST"}}
               :exec-fn clofidence.main/run
               :exec-args {:report-name "Etaoin Test Coverage"
                           :output-folder "target/clofidence"
                           :test-fn cognitect.test-runner.api/test
                           :test-fn-args [{:dirs ["test" "target/test-doc-blocks/test"]}]}
               :jvm-opts ["-Dclojure.storm.instrumentOnlyPrefixes=etaoin"]}

  ;; for consistent linting we use a specific version of clj-kondo through the jvm
  :clj-kondo {:extra-deps {clj-kondo/clj-kondo {:mvn/version "2024.05.24"}}
              :main-opts ["-m" "clj-kondo.main"]}

  :eastwood {:extra-deps {jonase/eastwood {:mvn/version "1.4.2"}}
             :extra-paths ["test"]
             :main-opts ["-m" "eastwood.lint" {:source-paths ["src"]
                                               :test-paths ["test"]
                                               :add-linters [:performance]
                                               :exclude-linters [:local-shadows-var]}]}

  :build {:deps {io.github.clojure/tools.build {:mvn/version "0.10.4"}}
          :extra-paths ["build"]
          :ns-default build}

  ;; keep deploy deps separate from build deps to avoid download-deps issues
  ;; caused by, I think, conflicting maven deps
  :deploy {:extra-deps {slipset/deps-deploy {:mvn/version "0.2.2"}}}

  :outdated {:extra-deps {com.github.liquidz/antq {:mvn/version  "2.8.1201"}
                          org.clojure/clojure {:mvn/version "1.11.1"}
                          org.slf4j/slf4j-simple {:mvn/version "2.0.13"} ;; to rid ourselves of logger warnings
                          }
             :main-opts ["-m" "antq.core"
                         "--exclude=ch.qos.logback/logback-classic@1.4.x" ;; requires min jdk 11, we are currently jdk8 compatible
                         "--exclude=ch.qos.logback/logback-classic@1.5.x" ;; requires min jdk 11, we are currently jdk8 compatible
                         ]}

  :repl/cider
  {:extra-deps {org.clojure/clojure {:mvn/version "1.11.3"}
                nrepl/nrepl                {:mvn/version "1.2.0"}
                cider/cider-nrepl          {:mvn/version "0.49.1"}
                refactor-nrepl/refactor-nrepl {:mvn/version "3.10.0"}}
   :jvm-opts ["-XX:-OmitStackTraceInFastThrow"]
   :main-opts  ["-m" "nrepl.cmdline"
                "--middleware" "[refactor-nrepl.middleware/wrap-refactor,cider.nrepl/cider-middleware]"
                "-i"]}}}
