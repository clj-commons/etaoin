{:paths ["src" "resources"]
 :deps {org.clojure/clojure {:mvn/version "1.9.0"} ;; min clojure version
        babashka/fs {:mvn/version "0.1.6"}
        babashka/process {:mvn/version "0.1.7"}
        clj-http/clj-http {:mvn/version "3.12.3"} ;; for jvm use
        org.clj-commons/clj-http-lite {:mvn/version "0.4.392"} ;; for babashka use
        cheshire/cheshire {:mvn/version "5.11.0"}
        org.clojure/tools.cli {:mvn/version "1.0.206"}
        org.clojure/tools.logging {:mvn/version "1.2.4"}}
 :aliases
 {:1.11 {:replace-deps {org.clojure/clojure {:mvn/version "1.11.1"}}}
  :debug {:extra-paths ["env/dev/resources"]}
  :test {:extra-paths ["test" "env/test/resources"]
         :extra-deps {io.github.cognitect-labs/test-runner {:git/tag "v0.5.1" :git/sha "dfb30dd"}
                      ch.qos.logback/logback-classic {:mvn/version "1.3.0-alpha16"}
                      ;; for http-client which uses apache http client 4.x which uses commons logging
                      org.slf4j/jcl-over-slf4j {:mvn/version "2.0.0-alpha7"}}
         :main-opts ["-m" "cognitect.test-runner"]}
  :script {:extra-paths ["script"]}
  ;; for babashka testing, needed for etaoin.ide
  :bb-spec {:extra-deps {org.babashka/spec.alpha {:git/url "https://github.com/babashka/spec.alpha"
                                                  :sha "8df0712896f596680da7a32ae44bb000b7e45e68"}}}
  ;; for babashka testing, allows us to use cognitect test-runner
  :bb-test {:extra-deps {org.clojure/tools.namespace {:git/url "https://github.com/babashka/tools.namespace"
                                                      :git/sha "a13b037215e21a2e71aa34b27e1dd52c801a2a7b"}}}

  ;; test-doc-blocks - gen tests
  :test-doc-blocks {:replace-deps {org.clojure/clojure {:mvn/version "1.11.1"}
                                   com.github.lread/test-doc-blocks  {:mvn/version "1.0.166-alpha"}}
                    :replace-paths []
                    :ns-default lread.test-doc-blocks
                    :exec-args {:docs ["doc/01-user-guide.adoc"]}}

  ;; test-doc-blocks - run tests
  ;; usage: test:test-docs
  :test-docs {:override-deps {org.clojure/clojure {:mvn/version "1.11.1"}}
              :extra-paths ["target/test-doc-blocks/test"]
              :main-opts ["-m" "cognitect.test-runner"
                          "-d" "target/test-doc-blocks/test"]}

  ;; for consistent linting we use a specific version of clj-kondo through the jvm
  :clj-kondo {:extra-deps {clj-kondo/clj-kondo {:mvn/version "2022.06.22"}}
              :main-opts ["-m" "clj-kondo.main"]}

  :build {:deps {io.github.clojure/tools.build {:git/tag "v0.8.3" :git/sha "0d20256"}
                 slipset/deps-deploy {:mvn/version "0.2.0"}}
          :ns-default build}

  :outdated {:extra-deps {com.github.liquidz/antq {:mvn/version "1.9.874"}
                          org.slf4j/slf4j-simple {:mvn/version "1.7.36"} ;; to rid ourselves of logger warnings
                          }
             :main-opts ["-m" "antq.core"]}

  :repl/cider
  {:extra-deps {nrepl/nrepl                {:mvn/version "0.9.0"}
                cider/cider-nrepl          {:mvn/version "0.28.5"}
                refactor-nrepl/refactor-nrepl {:mvn/version "3.5.4"}}
   :jvm-opts ["-XX:-OmitStackTraceInFastThrow"]
   :main-opts  ["-m" "nrepl.cmdline"
                "--middleware" "[refactor-nrepl.middleware/wrap-refactor,cider.nrepl/cider-middleware]"
                "-i"]}}}
